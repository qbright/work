<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="me.qbright.lpms.web.dao.UserDao">
	<select id="getByPage" parameterType="me.qbright.lpms.web.common.PageRequest"
		resultType="User" flushCache="true">
		select * from user order by
		${sort.orderBy} ${sort.order}
		limit #{startCount} , #{pageSize}
	</select>

	<select id="getById" parameterType="long" resultType="User">
		select *
		from user where id=#{id}
	</select>

	<select id="getByEntity" resultType="User">
		select
		* from user
		<where>
			<if test="name != null">
				name = #{name}
			</if>
			<if test="password != null">
				password = #{password}
			</if>
		</where>
	</select>
	<select id="getTotalNum" resultType="Long">
		select COUNT(*) from user
	</select>
	<select id="getAll" resultType="User">
		select * from user
	</select>
	<select id="checkLogin" resultType="User">
		select * from user where name=#{name} and password=#{password} and root=#{root};	
	</select>
	<insert id="save" parameterType="User" useGeneratedKeys="true"
		keyProperty="id">
		insert into
		user(name,password,create_date,status,root,manager_num,email)values(#{name},#{password},#{create_date},#{status},#{root},#{manager_num},#{email})
	</insert>
	<update id="update" flushCache="true" parameterType="User">
		update user set name=#{name} , email=#{email}, root=#{root} where id=#{id}
	</update>
	
	<update id="updateMachine" flushCache="true" parameterType="User">
		update user set manager_num=#{manager_num} where id=#{id}	
	</update>
	
	<update id="updatePassword" flushCache="true" parameterType="User">
		update user set password=#{password} where id=#{id}
		
	</update>
	
	
	<delete id="delete" parameterType="long">
		delete from user where id=#{id}
	</delete>
</mapper>